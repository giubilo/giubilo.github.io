<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Recent Content on giubilo project site </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://localhost:1313/index.xml/</link>
    
    
    
    <updated>Sat, 01 Feb 2014 00:00:00 UTC</updated>
    
    <item>
      <title>CMIS</title>
      <link>http://localhost:1313/retrospectives/1000ft/cmis/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/retrospectives/1000ft/cmis/</guid>
      <description>

&lt;p&gt;&lt;em&gt;this page is not finished, see the [[wiki home|home]] to find out why&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/assets/img/cmis11-types-uml.png?raw=true&#34; alt=&#34;logo&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/assets/img/cmis11-highlevel-uml.png?raw=true&#34; alt=&#34;logo&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.alfresco.com/4.2/index.jsp?topic=%2Fcom.alfresco.enterprise.doc%2Fpra%2F1%2Ftopics%2Fcmis-welcome.html&#34;&gt;http://docs.alfresco.com/4.2/index.jsp?topic=%2Fcom.alfresco.enterprise.doc%2Fpra%2F1%2Ftopics%2Fcmis-welcome.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alfresco CMIS information: &lt;a href=&#34;http://www.alfresco.com/cmis&#34;&gt;http://www.alfresco.com/cmis&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.alfresco.com/4.2/topic/com.alfresco.enterprise.doc/pra/1/concepts/cmis-1.1-browser-binding.html&#34;&gt;http://docs.alfresco.com/4.2/topic/com.alfresco.enterprise.doc/pra/1/concepts/cmis-1.1-browser-binding.html&lt;/a&gt;
The Browser Binding&lt;/p&gt;

&lt;p&gt;In addition to the existing XML-based AtomPub and Web services bindings, CMIS 1.1 provides a simpler JSON-based binding. The browser binding is designed for web applications and is easy to use just with HTML and JavaScript. It uses just two verbs, GET and POST, and resources are referenced using simple and predictable URLs.
You reference content in the repository by using the two URLs returned by the getRepositories or getRepositoryInfo service:
rootFolderUrl
repositoryUrl
Objects can then be referenced in two ways;
by their Id
&lt;rootFolderUrl&gt;?objectId=&lt;objectId&gt;
by their path
&lt;rootFolderUrl&gt;/&lt;object path&gt;
Content that is independent of a folder, for example a Type definition be accessed using the repositoryUrl service.
&lt;repositoryUrl&gt;?cmisselector=&lt;selector&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;cmis 1.1 standard&lt;/h2&gt;

&lt;p&gt;new cmis:item type - can use for config - types without content streams, secondary types&amp;hellip;both really cool.new browser binding - preferred&lt;/p&gt;

&lt;p&gt;put in the pictures from the standard for objects, and create a picture that highlights the services&amp;hellip;&lt;/p&gt;

&lt;p&gt;basically create a really condensed version of the spec.&lt;/p&gt;

&lt;p&gt;To use CMIS, you can either directly interact with one of the CMIS bindings or develop against a CMIS client API. Several APIs are &amp;ldquo;in development&amp;rdquo; for the following programming languages: &lt;a href=&#34;http://wiki.alfresco.com/wiki/CMIS#CMIS_Client_APIs&#34;&gt;cient cmis api&amp;rsquo;s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wiki.alfresco.com/wiki/CMIS&#34;&gt;cmis wiki&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;IBM CMIS
&lt;a href=&#34;http://www-01.ibm.com/software/ecm/cmis.html&#34;&gt;http://www-01.ibm.com/software/ecm/cmis.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CMIS Poster Lab videos
&lt;a href=&#34;https://www.youtube.com/watch?v=_koCqeYic1k&#34;&gt;https://www.youtube.com/watch?v=_koCqeYic1k&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.alfresco.com/4.2/topic/com.alfresco.enterprise.doc/pra/1/concepts/cmis-1.1-browser-binding-get.html&#34;&gt;http://docs.alfresco.com/4.2/topic/com.alfresco.enterprise.doc/pra/1/concepts/cmis-1.1-browser-binding-get.html&lt;/a&gt;
The URL to get all of the children of the root/test node in the repository looks like this:
&lt;a href=&#34;http://localhost:8080/alfresco/api/-default-/public/cmis/versions/1.1/browser/root/test?cmisselector=children&#34;&gt;http://localhost:8080/alfresco/api/-default-/public/cmis/versions/1.1/browser/root/test?cmisselector=children&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>UPnP</title>
      <link>http://localhost:1313/retrospectives/1000ft/upnp/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/retrospectives/1000ft/upnp/</guid>
      <description>&lt;p&gt;&lt;em&gt;this page is not finished, see the [[wiki home|home]] to find out why&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/assets/img/upnp-device-architecture-63.png?raw=true&#34; alt=&#34;UPnP Device Architecture&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/assets/img/upnp-av-architecture-63.png?raw=true&#34; alt=&#34;UPnP Device Architecture&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Project Success</title>
      <link>http://localhost:1313/retrospectives/how-to/project-success/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/retrospectives/how-to/project-success/</guid>
      <description>&lt;p&gt;&lt;em&gt;this page is not finished, see the &lt;a href=&#34;../wiki&#34;&gt;wiki home page&lt;/a&gt; to find out why&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Introduction
It might be stating the obvious but we begin a project with the view that we are going to successfully deliver the project’s outcomes. Right! In general I guess that is true, except for those stakeholders hoping we don’t finish, don’t deliver, don’t succeed.
Is finishing or delivering, the end-game then? Is that what success is.  How do we know we are at the end? How do we measure the level to which we have achieved the outcomes?
Who Says What Success Is?
What success means, is dependant generally on perspective; that is, who we are measuring success for.  There are generally many stakeholders on a project, all with their own views, sometimes conflicting, on what success is.  Success then is defined by the stakeholder’s personal views, professional views, role they play on the project or in society.  Their views are more than likely affected by the impact the project has on the environment, dictated by things like scale (100,000 people, 10 years) and nature (e.g. construction, software, social change) of the project.
The old saying “the project was brought in on time, on budget and with acceptable quality” is still, in some peoples mind, the measure of project success.  There is much evidence to suggest however, that these are not the only measures of success.&lt;/p&gt;

&lt;p&gt;Turner&lt;br /&gt;
Hartman&lt;/p&gt;

&lt;p&gt;Success as a Function of Time
Projects are unique, transient, almost organic entities.  They have a start, middle and end.&lt;br /&gt;
At the beginning of a project it is important to understand what are the criteria for success and who is measuring success.  This allows the direction of the project to be set and provides a yardstick with which to later evaluate the project.
During the project we monitor success at useful points to ensure there is a reason to continue, to learn from what we have done right so that we can continue to use successful techniques and use points of success to motivate the team.
It is important to end the project with success as generally all stakeholders have begun and continued the project with the thought of success.
The point in time we are measuring success has an enormous influence on what success is and who measures success.  The team may be interested in time and quality during the project, the sponsor in cost at delivery time and the community might be interested in the impact the project had years after it was delivered.&lt;/p&gt;

&lt;p&gt;PIC&lt;/p&gt;

&lt;p&gt;Maximising Success
Some easy steps to maximise the chances of success;
* Understand the general drivers, pressures, resistance and dynamics of projects
* Learn from past mistakes
* Apply sound management techniques&lt;/p&gt;

&lt;p&gt;Understanding Projects
The chances of success can be maximised if you manage the forces on the project effectively.&lt;/p&gt;

&lt;p&gt;Turner describes a number of interactions of a project.  Each may have an affect on the other.  Even though most projects by their nature are unique, some of the effects of the interactions may be understood through examining similarities to other projects.  Many of these project integration affects are well documented.&lt;/p&gt;

&lt;p&gt;Of all the project dynamics, Attitude is the most important.
The chances of success are substantially diminished unless;
* There is major commitment to making the project a success
* The motivation of everyone working on the project is high
* Attitudes are supportive and positive.&lt;/p&gt;

&lt;p&gt;Learning From The Past
There is an enormous amount of generic information about what teams have done in the past to succeed and what pitfalls caused a less than desirable outcome.  The sheer volume of literature and anecdotal evidence to suggest that projects fail is a strong indicator for being concerned about why projects fail.
By looking to the past we can see what worked and what didn’t so that we can learn from past successes and avoid past mistakes.&lt;/p&gt;

&lt;p&gt;project failure examples&lt;/p&gt;

&lt;p&gt;Cunning Plan: We&amp;rsquo;ll just do it!!&lt;/p&gt;

&lt;p&gt;If you fail to plan, then plan to fail.&lt;/p&gt;

&lt;p&gt;We never seem to have time to plan our projects, but we always have time to do them twice.&lt;/p&gt;

&lt;p&gt;Project Pitfalls
3 Grude describes a number of categories of pitfalls that have been observed on projects.  This is not intended as an exhaustive list but useful as a quick health check for a project;&lt;/p&gt;

&lt;p&gt;Establishing the Project&lt;br /&gt;
Pitfalls in the way the project is set up within the parent organisation;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;project plans not aligned with business plans,&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;procedures for managing projects are not well defined,&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;priorities are not communicated to parties involved,&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;no shared vision.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Planning the Project
Pitfalls in the way the work is defined, the time &amp;amp; cost schedules calculated and communicated to the project team;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;project plans developed on a single level,&lt;/li&gt;
&lt;li&gt;using cumbersome tools,&lt;/li&gt;
&lt;li&gt;creativity discouraged,&lt;/li&gt;
&lt;li&gt;unrealistic estimates&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Organising &amp;amp; Implementing the Project
Pitfalls in building the project organisation and assigning work to people;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;lack of cooperation,&lt;/li&gt;
&lt;li&gt;resource providers not committed,&lt;/li&gt;
&lt;li&gt;resources not available when required,&lt;/li&gt;
&lt;li&gt;management responsibility not defined,&lt;/li&gt;
&lt;li&gt;poor communication,&lt;/li&gt;
&lt;li&gt;technical vs project management.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Controlling the Project
Pitfalls in monitoring and control;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;purpose of control not understood,&lt;/li&gt;
&lt;li&gt;progress is not monitored against the plan,&lt;/li&gt;
&lt;li&gt;ineffective review meetings,&lt;/li&gt;
&lt;li&gt;responsibility without authority.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Principles of Good Project Management
Project Management, just as any other management stream, has it’s own principles upon which a manager can look to for guidance.  There is a huge body of stored knowledge on the principles and professional certification available for those willing.  These will all arm the manager with an enormous amount of skill and techniques on which to build experience.
In addition to reading through all of the available knowledge and undertaking the available studies a number of simple, practical principles may be relied upon;
 Most large or complex problems become easier if broken down into manageable parts that     allow them all to be absorbed.  Make use of breakdown structures for any part of the project    that requires visibility and understanding, such as tasks, people, product, organisation.  By   breaking then down we can more easily see new information about each piece as it becomes    evident over time.  This makes it possible to monitor and manage the project elaboration.
 People are the biggest factor in nearly all projects, they need to be adequately motivated,    organised, committed, directed, skilled and communicated with.  You need to confirm and     align stakeholder’s success criteria.  Disregard the people factors at your peril.
 Get as many successes as you can.  Organise the team, the schedule &amp;amp; the work so that  successes happy often.  If each small step is a success it will be easier and more likely that  the journey will be a success.  Learn from past successes and avoid the causes for past     failures.
 Continuously carry out health checks and audits.  The old adage, ‘if it isn’t broken, don’t fix it’    doesn’t apply if we don’t know it isn’t broken.  Only by understanding the dynamics and     symptoms of a project can we steer the ship and take corrective actions.&lt;/p&gt;

&lt;p&gt;Above all else KEEP IT SIMPLE.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Modifying content types</title>
      <link>http://localhost:1313/retrospectives/how-to/modifying-content-types/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/retrospectives/how-to/modifying-content-types/</guid>
      <description>

&lt;p&gt;&lt;em&gt;this page is not finished, see the &lt;a href=&#34;../wiki&#34;&gt;wiki home page&lt;/a&gt; to find out why&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There really is no need to write a &lt;a href=&#34;http://www.imdb.com/title/tt0077631/&#34;&gt;fully blown&lt;/a&gt; how-to of the technical aspects for &lt;a href=&#34;http://docs.alfresco.com/4.2/topic/com.alfresco.enterprise.doc/tasks/kb-define-custom-model.html&#34;&gt;modifying content models in Alfresco&lt;/a&gt; as Jeff Potts has written a &lt;a href=&#34;http://ecmarchitect.com/images/articles/alfresco-content/content-article-2ed.pdf&#34;&gt;concise and complete tutorial&lt;/a&gt; already including:&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;paint-by-numbers implementation (sort of technical specification)&lt;/h2&gt;

&lt;p&gt;Here are the steps to follow when configuring a custom content model:
1. Create an extension directory
2. Create a custom model context file
3. Create a model file
4. Restart Tomcat&lt;/p&gt;

&lt;p&gt;using xmp, what to about scrapers / uni-bi directional metadata updating (should keep the original file and create a rendition if updating metadata&lt;/p&gt;

&lt;p&gt;change types
&lt;a href=&#34;http://forums.alfresco.com/forum/end-user-discussions/alfresco-share/change-types-options-menu-labeleds-06082011-1023&#34;&gt;http://forums.alfresco.com/forum/end-user-discussions/alfresco-share/change-types-options-menu-labeleds-06082011-1023&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Configuring the Custom Model in Alfresco Share&lt;/p&gt;

&lt;p&gt;Adding Custom Types and Aspects to Lists
 “Is sub-type” criteria. When a user configures a rule on a space and uses content types as a criteria, the custom types should be a choice in the list of possible content types.
 “Has aspect” criteria. When a user configures a rule on a space and uses the presence of an aspect as a criteria, the custom aspects should be a choice in the list of possible aspects.
 Change type action. When a user runs the “specialize type” action, either as part of a rule configuration or through the “Change Type” UI action, the custom types should be available.
 Add aspect. When a user runs the “add aspect” action, either as part of a rule configuration or through the “Manage Aspects” UI action, the custom aspects should be available.&lt;/p&gt;

&lt;p&gt;Configuring Forms for Custom Properties / Configuring the form service for a custom type / Configuring the form service for custom properties
 Document Details. When a user looks at the document details page for a piece of content
stored as one of the custom types or with one of the custom aspects attached, the properties section should show the custom properties.
 Edit Properties. When a user edits the properties of a piece of content, either with the “full” form or the abbreviated form, the appropriate properties should be shown.&lt;/p&gt;

&lt;p&gt;Configuring Advanced Search in Alfresco Share
 Advanced search. When a user runs an advanced search, they should be able to restrict search results to instances of our custom types and/or content with specific values for the properties of our custom types.&lt;/p&gt;

&lt;p&gt;Localizing Strings for Custom Content Models&lt;/p&gt;

&lt;p&gt;You’ve seen that configuring Alfresco Share for your custom content model essentially involves adding XML to the share-config-custom.xml file and creating a properties file for your localized strings. All of this lives under the “web-extension” directory in the Share web application.
There are other things you might like to do to the Share user interface, but these are beyond the scope of this document:
• Add custom content types to the Create Content menu
• Add custom properties to the document library sort criteria
• Add custom properties to the document library data grid&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://wiki.alfresco.com/wiki/Data_Dictionary_Guide#Step_by_Step_Model_Definition&#34;&gt;http://wiki.alfresco.com/wiki/Data_Dictionary_Guide#Step_by_Step_Model_Definition&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://wiki.alfresco.com/wiki/Displaying_Custom_Metadata&#34;&gt;http://wiki.alfresco.com/wiki/Displaying_Custom_Metadata&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../tree/master/aaContentModel&#34;&gt;aaContentModel&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Where&#39;s streaming heading?</title>
      <link>http://localhost:1313/blog/pov/wheres-streaming-heading/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/blog/pov/wheres-streaming-heading/</guid>
      <description>&lt;p&gt;&lt;em&gt;this page is not finished, see the &lt;a href=&#34;../wiki&#34;&gt;wiki home page&lt;/a&gt; to find out why&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;youtube
Commercial appliances (including NAS) certified for UpnP/DLNA (
SmartTV / STB (including Telco supplied) with online subscription service - catchup TV, movies
Airplay
HTPC / Android Sticks / GoogleTV / OpenSource media systems
VLC style RTMP
AdultContent industry&lt;/p&gt;

&lt;p&gt;HDMI/MHL/Wireless app&lt;/p&gt;

&lt;p&gt;universal search&lt;/p&gt;

&lt;p&gt;dropbox, picassa, slideshare&lt;/p&gt;

&lt;p&gt;xbmc model is interesting with roadmaps for peer-to-peer upnp file sharing, universal search, ecosystem of addons and customisations, dlna and airplay support, multiple methods as a control point&lt;/p&gt;

&lt;p&gt;Risks (remember to put in mitigations)
-   the market is already moving in a way with discrete / point solutions
-   UPnP security issues&lt;/p&gt;

&lt;p&gt;DLNA and AirPlay won&amp;rsquo;t talk to each other
Choosing a home entertainment platform is a bit like picking sides in a battle: there are two rival standards, DLNA and AirPlay. Where DLNA works across thousands of different devices, AirPlay (and AirPrint) is more selective and only works on Apple or Apple-approved products. That&amp;rsquo;s the official line, anyway, but there are ways around it: apps such as AirSync bring AirPlay streaming to Android phones, while apps such as media:connect offer DLNA on iOS.&lt;/p&gt;

&lt;p&gt;manuals online&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Service Terms</title>
      <link>http://localhost:1313/about/serviceterms/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/about/serviceterms/</guid>
      <description>&lt;p&gt;The content via giubilo.org is subject to the folloing:&lt;/p&gt;

&lt;p&gt;This program is free software; you can redistribute it and/or modify it
under the terms of the the Artistic License (2.0). You may obtain a
copy of the full license at: &lt;a href=&#34;http://www.perlfoundation.org/artistic_license_2_0&#34;&gt;http://www.perlfoundation.org/artistic_license_2_0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Disclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER
AND CONTRIBUTORS &amp;lsquo;AS IS&amp;rsquo; AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
PURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY
YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR
CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR
CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Contacts</title>
      <link>http://localhost:1313/about/contacts/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/about/contacts/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Where&#39;s content management heading?</title>
      <link>http://localhost:1313/blog/pov/wheres-content-management-heading/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/blog/pov/wheres-content-management-heading/</guid>
      <description>&lt;p&gt;&lt;em&gt;this page is not finished, see the &lt;a href=&#34;../wiki&#34;&gt;wiki home page&lt;/a&gt; to find out why&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Consumers need a consumer level experience (read:iPhone usage easy) to use content tools.  It&amp;rsquo;s not just using the getting at content while its in the repository but importantly ingestion and publishing need to be easy.&lt;/p&gt;

&lt;p&gt;and put the repository in a secure cloud so someone can do the management and that&amp;rsquo;d be nirvana&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Motivation</title>
      <link>http://localhost:1313/about/motivation/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/about/motivation/</guid>
      <description>&lt;p&gt;Your family is probably more organised than ours but we generate or collect a ton of stuff including;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;closets full of paper&lt;/li&gt;
&lt;li&gt;photo albums and video tapes with handwritten reminders of locations, dates, and people&lt;/li&gt;
&lt;li&gt;recipe books with post-it-notes to highlight favourite meals and tips to make them turn out&lt;/li&gt;
&lt;li&gt;on-line social media photo sites or photo browsing applications to share holiday snaps and stories&lt;/li&gt;
&lt;li&gt;boxes of receipts and bills or magazine clippings of housing renovations&lt;/li&gt;
&lt;li&gt;shelves stacked with music, books and movies&lt;/li&gt;
&lt;li&gt;a fridge and walls covered in school notices and reminders, report cards, holiday programs for the kids or things to do around the house&lt;/li&gt;
&lt;li&gt;music docks and subscription services to play tunes and create playlists&lt;/li&gt;
&lt;li&gt;on-line social bookmark communities or private collections of browser bookmarks to interesting sites&lt;/li&gt;
&lt;li&gt;blogs of hints, comments, reviews, gists, likes and tips&lt;/li&gt;
&lt;li&gt;on-line file sharing or hard drives to hold electronic documents or emails&lt;/li&gt;
&lt;li&gt;on-line video channels or media centre appliances to stream tv-shows, ebooks, podcasts and movies to big and small screens.&lt;/li&gt;  
&lt;/ul&gt;

&lt;p&gt;This all works but it can be hard to find things or the links between them and it can take time to create folders and labels to store things. And things change over time (like assignments) or are sensitive (like a Last Will), or are age inappropriate (like violent movies) or are highly sentimental (like family snaps) --it can be hard to work out which is the latest version, who can access something we&#39;ve shared and know if it is protected from loss --it can be hard to stay in control when some of these things are in other&#39;s hands (like on-line sharing or backup sites).&lt;/p&gt;

&lt;p&gt;We&#39;d love to be able to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;store all our stuff forever, regardless of what it is and not worry about losing it because it got deleted, misplaced or was overwritten&lt;/li&gt;
&lt;li&gt;save stuff easily without needing to spend ages creating folder structures and labels.&lt;/li&gt;
&lt;li&gt;find stuff, no matter where it is or where we are, or what it&#39;s being used for&lt;/li&gt;
&lt;li&gt;be in control of our stuff, but also still be able to get help from others to manage it.&lt;/li&gt;
&lt;li&gt;be able to safely and easily share stuff and know what its being used for&lt;/li&gt;
&lt;/ul&gt;  

&lt;p&gt;That way we&#39;d:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;know the wedding and baby snaps are safe if our hard disk fails or the on-line back-up site disappears&lt;/li&gt;
&lt;li&gt;reprint the latest version of an assignment at uni that forgot to pick up off the kitchen table&lt;/li&gt;
&lt;li&gt;get this year’s tax notes and receipts while at a bank filling out loan forms&lt;/li&gt;
&lt;li&gt;know that the kids aren’t watching blood and guts zombie movies or how much television is being watched&lt;/li&gt;
&lt;li&gt;cook a favourite recipe at a friends house and use aunty’s email of tips and a how-to demonstration video to improve the chances of it working out&lt;/li&gt;
&lt;li&gt;bring together subscription services in one place, play them anywhere in the house and even work out if it’s worth having all of them&lt;/li&gt;
&lt;li&gt;see what things everyone in the family has on&lt;/li&gt;
&lt;li&gt;have a list of home contents that includes a photo of each item, a scan of its purchase receipt, and its user manual to help with insurance or warranty repairs&lt;/li&gt;  
&lt;li&gt;show the architect working on the extension a gallery of ideas collected from magazines and realestate sites&lt;/li&gt;
&lt;li&gt;see a things to do list with materials needed while at the hardware store&lt;/li&gt;
&lt;li&gt;double check that have set to record a favourite show while out camping&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
&lt;a name=&#34;The Idea&#34; class=&#34;anchor&#34; href=&#34;#idea&#34;&gt;&lt;span class=&#34;octicon octicon-link&#34;&gt;&lt;/span&gt;&lt;/a&gt;
The Idea
&lt;/h3&gt;

&lt;p&gt;We want a simple access point to the family&#39;s entire digital life&lt;/p&gt;
&lt;p&gt;--a virtual personal assistant to tie up the loose ends of how we organise our important documents and entertainment.&lt;/p&gt;

&lt;p&gt;The processes and tools to do this aren&#39;t new concepts.  For years:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Corporations have been able to do this by digitising file-rooms full of paper and storing it in Enterprise Content Management (ECM) systems so it can then be more easily; routed through business processes, secured, and searched.&lt;/li&gt;
&lt;li&gt;Software developers have had Distributed Version Control systems to manage multiple versions, differences and dependencies with source code, builds and documentation.&lt;/li&gt;
&lt;li&gt;Researchers have had distributed immutable repositories to preserve research papers with integrity.&lt;/li&gt;
&lt;li&gt;Webmasters have had sophisticated content tools to organise digital assets for publishing on cool sites.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; Between these they have had; sophisticated linking, analytics, collaboration and search, version control, file signing for preservation, integrity, encryption, licensing and citability, granular security models, flexible rules-based workflows and tools for backup and cloud access &lt;/p&gt;
&lt;p&gt;It could make a lot of sense to take these cool capabilities and consumerise them for home use.&lt;/p&gt;

&lt;h3&gt;
&lt;a name=&#34;Objectives&#34; class=&#34;anchor&#34; href=&#34;#objectives&#34;&gt;&lt;span class=&#34;octicon octicon-link&#34;&gt;&lt;/span&gt;&lt;/a&gt;Objectives&lt;/h3&gt;

&lt;p&gt;&lt;p&gt;allegria will hopefully be a fun and interesting experience in creating something to organise and preserve all the family&amp;rsquo;s electronic stuff while at the same time:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;working out how to make the processes and tools large organisations use to organise stuff (like Enterprise Content Management, Advanced Case Management,
Business Process Management) practical for a household.&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;learning how to use some open source project techniques, tools and technologies (like Portfolio Management, Agile Development, Application Lifecycle Management and DevOps).&lt;/li&gt;&lt;br /&gt;
&lt;li&gt;passing back what&amp;rsquo;s been learned to the community.&lt;/li&gt;&lt;br /&gt;
&lt;/ol&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Perl</title>
      <link>http://localhost:1313/retrospectives/paint-by-numbers/perl/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/retrospectives/paint-by-numbers/perl/</guid>
      <description>

&lt;p&gt;Have chosen to use Perl because;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Perl is common in opensource projects and has extensive documentation and huge community&lt;/li&gt;
&lt;li&gt;there a &lt;a href=&#34;https://github.com/MichaelDaum/cmis-perl&#34;&gt;CMIS wrapper&lt;/a&gt; written in Perl&lt;/li&gt;
&lt;li&gt;there&amp;rsquo;s a &lt;a href=&#34;http://www.cybergarage.org/twiki/bin/view/Main/CyberLinkForPerl&#34;&gt;DLNA media server extension&lt;/a&gt; written in Perl&lt;/li&gt;
&lt;li&gt;handles text stuff (which there is going to be heaps of)&lt;/li&gt;
&lt;li&gt;it was new to me and I like a challenge&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Going to try and keep it neat and maintainable through the help of the Eclipse - Epic plugin.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Steps&lt;/h2&gt;

&lt;p&gt;Never used perl before so &lt;a href=&#34;http://www.imdb.com/title/tt0066011/?ref_=nm_flmg_com_92&#34;&gt;where do we begin&lt;/a&gt;? At the &lt;a href=&#34;http://www.perl.org/books/beginning-perl/&#34;&gt;beginning&lt;/a&gt; I guess:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;perl is an interpreted language (not compiled to a binary) so need an interpreter&lt;/li&gt;
&lt;li&gt;get help&lt;/li&gt;
&lt;li&gt;be good to the &lt;a href=&#34;http://www.imdb.com/title/tt0497116/&#34;&gt;environment&lt;/a&gt; variables&lt;/li&gt;
&lt;li&gt;reuse, reduce, recycle - live sustainably with the Comprehensive Perl Archive Network&lt;/li&gt;
&lt;li&gt;EPIC debugging is, well, &lt;a href=&#34;http://www.imdb.com/title/tt0848537/&#34;&gt;epic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;document as you go, who would have thunk it&lt;/li&gt;
&lt;li&gt;a &lt;a href=&#34;http://www.imdb.com/title/tt0117509/&#34;&gt;name by any other&lt;/a&gt; is conventional&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;The Perl Interpreter&lt;/h3&gt;

&lt;p&gt;To check if already have a perl interpreter installed type the following into a command prompt:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    perl -v 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It should return something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    This is perl 5, version 12, subversion 4 (v5.12.4) built for darwin-thread-multi-2level
    (with 2 registered patches, see perl -V for more detail)
    
    Copyright 1987-2010, Larry Wall
    
    Perl may be copied only under the terms of either the Artistic License or the
    GNU General Public License, which may be found in the Perl 5 source kit.
    
    Complete documentation for Perl, including FAQ lists, should be found on
    this system using &amp;quot;man perl&amp;quot; or &amp;quot;perldoc perl&amp;quot;.  If you have access to the
    Internet, point your browser at http://www.perl.org/, the Perl Home Page.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If it doesn&amp;rsquo;t, &lt;a href=&#34;http://www.perl.org/get.html&#34;&gt;download one&lt;/a&gt; for the relevant platform:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Platform&lt;/th&gt;
&lt;th&gt;Where&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;mac&lt;/td&gt;
&lt;td&gt;pretty likely already installed&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;windows&lt;/td&gt;
&lt;td&gt;could get &lt;a href=&#34;http://www.activestate.com&#34;&gt;activestate&lt;/a&gt; or &lt;a href=&#34;http://strawberryperl.com&#34;&gt;strawberryperl&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;linux&lt;/td&gt;
&lt;td&gt;consult package manager&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Once have the perl interpreter installed have access to the &lt;a href=&#34;http://www.perlmonks.org/?node_id=640489&#34;&gt;perl shell&lt;/a&gt; with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    perl -MCPAN -e shell   
    cpan  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;getting help&lt;/h3&gt;

&lt;p&gt;Perl is up to version 5 now and that means there is tons of help out there.  Some of the obvious places are;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://perldoc.perl.org/perl.html&#34;&gt;http://perldoc.perl.org/perl.html&lt;/a&gt; and &lt;a href=&#34;http://www.perl.org/learn.html&#34;&gt;http://www.perl.org/learn.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/viewer?url=http://blob.perl.org/books/beginning-perl/3145_Intro.pdf&#34;&gt;Beginning Perl Intro&lt;/a&gt; explains about getting text: &lt;em&gt;typing &lt;code&gt;perldoc perl&lt;/code&gt; from a command prompt will get you a table of contents and some basic infomration about Perl.  The pages your probably going to use are the Perl FAQ and &amp;lsquo;perlfunc&amp;rsquo;, which describes the built-in functions&lt;/em&gt;.  Page 10 in here also lists help sources.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.perlmonks.org&#34;&gt;http://www.perlmonks.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.perlhowto.com&#34;&gt;http://www.perlhowto.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;these look really simple to go through if have a bit of time: &lt;a href=&#34;http://docstore.mik.ua/orelly/perl3/lperl/index.htm&#34;&gt;http://docstore.mik.ua/orelly/perl3/lperl/index.htm&lt;/a&gt; and &lt;a href=&#34;http://docstore.mik.ua/orelly/perl4/index.htm&#34;&gt;http://docstore.mik.ua/orelly/perl4/index.htm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As with all help / how-to&amp;rsquo;s these established sources sometimes had varying levels of details for some of the start-up type questions like; @INC and the environment, working out what modules are installed or what to call things.  Usually had to put together a couple to get the answer (like the ones below).&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;@INC&lt;/h3&gt;

&lt;p&gt;As start to use (pardon the pun), perl and edit first modules, a number of the errors popped up relating to modules that were &amp;lsquo;using&amp;rsquo; but couldn&amp;rsquo;t find.  This will probably be a path issue but the fix isn&amp;rsquo;t that obvious as there are gazillions of different ideas out there like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;mixture of &lt;a href=&#34;http://stackoverflow.com/questions/2526804/how-is-perls-inc-constructed-aka-what-are-all-the-ways-of-affecting-where-pe&#34;&gt;use, &amp;lsquo;@INC&amp;rsquo; and PERL5LIB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;overview of &lt;a href=&#34;https://docs.google.com/viewer?url=http://blob.perl.org/books/beginning-perl/3145_AppB.pdf&#34;&gt;special variables&lt;/a&gt; like &amp;lsquo;%ENV&amp;rsquo;, &amp;lsquo;@INC&amp;rsquo;, &amp;lsquo;%INC&amp;rsquo;&lt;/li&gt;
&lt;li&gt;another environment setup &lt;a href=&#34;http://www.perlmonks.org/?node_id=867860&#34;&gt;PERL5LIB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;some more about &lt;a href=&#34;https://docs.google.com/viewer?url=http://blob.perl.org/books/beginning-perl/3145_Chap10.pdf&#34;&gt;modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.perl.com/pub/2002/05/14/mod_perl.html&#34;&gt;use(), require(), do(), %INC and @INC Explained&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Somewhere in this list (start at the top and work down) and google will probably be the answer.&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;CPAN Perl Modules&lt;/h3&gt;

&lt;p&gt;There are a gazilion &lt;a href=&#34;https://docs.google.com/viewer?url=http://blob.perl.org/books/beginning-perl/3145_Chap10.pdf&#34;&gt;perl modules&lt;/a&gt; or bits of code already written to do all sorts of things, so where is it?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;installed as part of the interpreter  (File::Find, benchmark etc)&lt;/li&gt;
&lt;li&gt;code up on repositories like GitHub&lt;/li&gt;
&lt;li&gt;perl package &lt;a href=&#34;http://docs.activestate.com/activeperl/5.10/faq/ActivePerl-faq2.html#ppm_repositories&#34;&gt;repositories&lt;/a&gt; like for ActiveState&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cpan.org/misc/cpan-faq.html&#34;&gt;Comprehensive Perl Archive Network&lt;/a&gt; (CPAN)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am using macOSX so perl was installed already and installed the cpan addon &lt;a href=&#34;http://www.bioperl.org/wiki/Tutorial:Installing_Perl_modules&#34;&gt;package manager&lt;/a&gt; by entering the &lt;a href=&#34;http://search.cpan.org/~miyagawa/App-cpanminus-1.7001/bin/cpanm&#34;&gt;code below&lt;/a&gt; in a terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    sudo cpan App::cpanminus
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now &lt;a href=&#34;http://www.cpan.org/modules/INSTALL.html&#34;&gt;install&lt;/a&gt; any module you can find on cpan &lt;code&gt;sudo cpanm Module::Name&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To find what modules are currently installed, as with most things perl there seems to be multitude of ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;instmodsh&lt;/code&gt; &lt;a href=&#34;http://www.cyberciti.biz/faq/how-do-i-find-out-what-perl-modules-already-installed-on-my-system/&#34;&gt;to see all installed modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;perldoc -l Net::UPnP&lt;/code&gt; &lt;a href=&#34;http://www.perlhowto.com/list_the_installed_modules&#34;&gt;to see if Net::UPnP is installed&lt;/a&gt;, this will show where the module (.pm) is&lt;/li&gt;
&lt;li&gt;&lt;code&gt;perl -MTie::Hash -e 1&lt;/code&gt; &lt;a href=&#34;http://www.perlhowto.com/check_if_a_module_is_installed&#34;&gt;to see if Tie::Hash is installed&lt;/a&gt;, this will run it so if not installed will get and error message and if installed then will need to break execution&lt;/li&gt;
&lt;li&gt;see the &lt;code&gt;perlmodinstall&lt;/code&gt; manpage&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;EPIC&lt;/h3&gt;

&lt;p&gt;To get the most out of EPIC, need to install some supporting perl modules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;project templates (Module::Starter)&lt;/li&gt;
&lt;li&gt;source formatting (Perl::Tidy), also get colouring&lt;/li&gt;
&lt;li&gt;best practice approach (Perl::Critic)&lt;/li&gt;
&lt;li&gt;syntax (Perl::Debugger and Pad::Walker)&lt;/li&gt;
&lt;li&gt;commenting / documentation (&lt;a href=&#34;http://perldoc.perl.org/perlpod.html&#34;&gt;perlpod&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;eclipse perspective for outline views of code and consoles for heaps of things like tasks, logs etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To do that we ran the following code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    sudo cpanm Module::Starter
    sudo cpanm Perl::Tidy
    sudo cpanm Perl::Critic
    sudo cpanm Pad::Walker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When configuring these into &lt;a href=&#34;./Paint-by-numbers:-Eclipse-with-Epic-and-Egit&#34;&gt;EPIC preferences&lt;/a&gt; need to find where the modules installed to as couldn&amp;rsquo;t use the default locations.&lt;/p&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;Perldoc&lt;/h3&gt;

&lt;p&gt;Understanding how perldoc works, in particular the syntax for embedding pod into code and then using it to auto-generate documentation was a great place to start understanding perl.  In doing this first, got to see code examples, work out how to see and fix mistakes like forgetting to put in spaces and semicolons at end of lines and had to use the perl interpreter and instal modules.  Also was an easy, practical way to start looking at the perl language, and actually got to produce something helpful.&lt;/p&gt;

&lt;p&gt;Got some help from the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://search.cpan.org/~rjbs/perl-5.18.1/pod/perlpod.pod&#34;&gt;http://search.cpan.org/~rjbs/perl-5.18.1/pod/perlpod.pod&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://perldoc.perl.org/perlpod.html&#34;&gt;http://perldoc.perl.org/perlpod.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.perlmonks.org/?node_id=252477&#34;&gt;http://www.perlmonks.org/?node_id=252477&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first pod we did was inside one of the pDLNA modules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create some heading information for the package (remember the = operator needs to be against the margin no spaces and sometimes need space at the end of line to work properly)&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;=head1 NAME

package PDLNA::SSDP - core module for Simple Service Discovery Protocol (SSDP).

=head1 DESCRIPTION

When a Universal Plug and Play (UPnP) enabled device joins a network.....

=cut
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;documentation for the functions used, note the use of &lt;code&gt;over&lt;/code&gt;, &lt;code&gt;begin/end html&lt;/code&gt;, &lt;code&gt;back&lt;/code&gt; and &lt;code&gt;cut&lt;/code&gt;, these give the pod structure (over to start the list and back to end it), also using html inside the pod meant could link between the resulting html docs, so when you &lt;a href=&#34;http://www.imdb.com/title/tt0389860/&#34;&gt;click&lt;/a&gt; on an internal library you get taken to the htmlpod for that module.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;=head1 LIBRARY FUNCTIONS

=over 12

=item internal libraries

=begin html

&amp;lt;/p&amp;gt;
&amp;lt;a href=&amp;quot;./Config.html&amp;quot;&amp;gt;PDLNA::Config&amp;lt;/a&amp;gt;,
&amp;lt;a href=&amp;quot;./Database.html&amp;quot;&amp;gt;PDLNA::Database&amp;lt;/a&amp;gt;,
&amp;lt;a href=&amp;quot;./Devices.html&amp;quot;&amp;gt;PDLNA::Devices&amp;lt;/a&amp;gt;,
&amp;lt;a href=&amp;quot;./Log.html&amp;quot;&amp;gt;PDLNA::Log&amp;lt;/a&amp;gt;.
&amp;lt;/p&amp;gt;

=end html

=item external libraries

L&amp;lt;IO::Socket::INET&amp;gt;,
L&amp;lt;IO::Socket::Multicast&amp;gt;,
L&amp;lt;Net::Netmask&amp;gt;.

=back

=cut
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;the block of pod like the following gave chance to document as went the modules actions&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;=item add_receive_socket()

=cut
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;this was how wrapped up pod in the module, note the use of &lt;code&gt;back&lt;/code&gt; at start of the podblock below, this is to close off the headings above.  Note also the use of &lt;code&gt;L&amp;lt;&amp;lt;lt&amp;gt;...E&amp;lt;gt&amp;gt;&amp;gt;&lt;/code&gt; this was a fiddly way to get the email link to work, the other web link was easier.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;=back

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2010-2013 Stefan Heumader L&amp;lt;E&amp;lt;lt&amp;gt;stefan@heumader.atE&amp;lt;gt&amp;gt;&amp;gt;.

This program is free software: you can redistribute it and/or modify
it under the terms of the ......  If not, see L&amp;lt;http://www.gnu.org/licenses/&amp;gt;.

=cut
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once had put all the pod into the modules then created a perl program as below to generate html files like the one for &lt;a href=&#34;../usefuldocs/SSDP.html&#34;&gt;ssdp&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    #!/usr/bin/perl
    
    use warnings;
    use strict;
    
    use Pod::Simple::HTMLBatch;
    use Pod::Simple::XHTML;

    my $in_dir = &#39;put directory in here&#39;;
    my $out_dir = $in_dir . &#39;POD&#39;;
    
    my $convert = Pod::Simple::HTMLBatch-&amp;gt;new;
    $convert-&amp;gt;html_render_class(&#39;Pod::Simple::XHTML&#39;);
    $convert-&amp;gt;add_css(&#39;http://www.perl.org/css/perl.css&#39;);
    $convert-&amp;gt;css_flurry(0);
    $convert-&amp;gt;contents_page_start;
    $convert-&amp;gt;contents_page_end;
    $convert-&amp;gt;javascript_flurry(0);
    $convert-&amp;gt;contents_file(0);
    $convert-&amp;gt;batch_convert( [ $in_dir ], $out_dir );
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;toc_7&#34;&gt;Some conventions&lt;/h3&gt;

&lt;p&gt;There seemed to be different naming conventions for different versions of perl but we&amp;rsquo;re using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;.pl for programs&lt;/li&gt;
&lt;li&gt;.pm for modules&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This seems to be ok and works in the EPIC plugin to ensure that get nice syntax colouring.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reporting project effort</title>
      <link>http://localhost:1313/retrospectives/spaghetti-western/reporting-project-effort/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/retrospectives/spaghetti-western/reporting-project-effort/</guid>
      <description>&lt;p&gt;&lt;em&gt;this page is not finished, see the &lt;a href=&#34;../wiki&#34;&gt;wiki home page&lt;/a&gt; to find out why&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A model for reporting the status of project effort:&lt;/p&gt;

&lt;p&gt;Multi-level messages&lt;/p&gt;

&lt;p&gt;Budget baseline
Actual baseline
Forecast baseline&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Github</title>
      <link>http://localhost:1313/retrospectives/paint-by-numbers/github/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/retrospectives/paint-by-numbers/github/</guid>
      <description>

&lt;p&gt;First things first! There&amp;rsquo;s a lot of stuff to manage; source code objects, project information, documentation, issues and will need to see how this stuff changes over time.  Had mainly used commercial implementations of source repositories and team collaboration / wiki tools.  Looked at a few open source ones (GitHub, BitBucket, SourceForge) and chose GitHub because; it had plenty of &lt;a href=&#34;http://git-scm.com/about&#34;&gt;documentation&lt;/a&gt; and &lt;a href=&#34;http://teach.github.com&#34;&gt;training&lt;/a&gt;, active community, mac client, eclipse plug-in and there are other modules such as cmis-perl, pDLNA and ember media manager - that the project will be leveraging - are also on GitHub.&lt;/p&gt;

&lt;p&gt;So we are going to use Git for:&lt;/p&gt;

&lt;p&gt;|GitHub Capability  |Use  |
|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;|&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;|&lt;br /&gt;
|GitHubPages |project information  |&lt;br /&gt;
|source code management tools (&amp;lt;&amp;gt; icon) | code storage, organisation, versioning, collaboration, backup, code review  |&lt;br /&gt;
|wiki (the book icon) | how to documentation  |&lt;br /&gt;
|issues (the (!) icon) | requirements and issue tracking   |
|GitHub stats  | use the graphs and &lt;a href=&#34;https://help.github.com/articles/be-social&#34;&gt;social stuff&lt;/a&gt; to see how we are going |&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s a bit of a hill to climb to get the most out of Git but it was great to put a &lt;a href=&#34;./HowTo:-setting-up-project-resources&#34;&gt;resource&lt;/a&gt; in like this as a first thing for the project as everything had a place to go and when talking to people could point them to it no matter where they were in the world.  We&amp;rsquo;re just using some of the basic bits.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Steps&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Setup GitHub account&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Setup repository&lt;/li&gt;
&lt;li&gt;Clone to desktop&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Edit README&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Setup GitHubPages&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Setup wiki&lt;/li&gt;
&lt;li&gt;Setup issues&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;1. Setup GitHub account&lt;/h3&gt;

&lt;p&gt;Simple registration, can do a free account or various paid ones if want more functionality, just go to &lt;a href=&#34;github.com&#34;&gt;github.com&lt;/a&gt;.  Can have individual accounts or organisation accounts.&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;2. Setup repository(s)&lt;/h3&gt;

&lt;p&gt;Just used the online prompts but there is an excellent &lt;a href=&#34;https://help.github.com&#34;&gt;bootcamp tutorial&lt;/a&gt;. Currently the project has repos for;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;allegria - the main repository that this wiki is in&lt;/li&gt;
&lt;li&gt;pDLNA - a &amp;lsquo;forked&amp;rsquo; repository of some modules that allegria will customise&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have initially set the allegria repo up as a catchall for all the concepts being developed.  Later on may make submodules of each of the big areas to make cloning easier but just keeping it simple for now.&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;3. Clone to desktop&lt;/h3&gt;

&lt;p&gt;So you need a client application on your desktop to clone your repository to so that you can work on it.  Can do this with the &lt;a href=&#34;http://git-scm.com/downloads&#34;&gt;commandline client&lt;/a&gt;, which is ok and has lots of &lt;a href=&#34;http://git-scm.com/about&#34;&gt;documentation&lt;/a&gt;.  Or can use a &lt;a href=&#34;http://git-scm.com/downloads/guis&#34;&gt;graphical client&lt;/a&gt; (had a brief look at the mac client and it was pretty cool).  But for this project&amp;rsquo;s purposes we are using a graphical client that is embedded into the Eclipse Integrated Development Environment &lt;a href=&#34;./Paint-by-numbers:-Eclipse-with-Epic-and-Egit&#34;&gt;see the paint-by numbers here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;4. Edit README&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://help.github.com/articles/create-a-repo&#34;&gt;create a repo&lt;/a&gt; tutorial suggests that it is a good idea for your GitHub repository to have a &lt;a href=&#34;.&#34;&gt;README&lt;/a&gt; (or README.md) file which is like a summary landing page for the online webclient. If you create a repo through the command line there&amp;rsquo;s a few hoops to jump through but if you use the online webclient there is a checkbox to initialise the repo with a readme (that&amp;rsquo;s the easiest way to go).  The readme&amp;rsquo;s a good place to put some summary detail about the project and kick off some links to things like a project page, the wiki or to related sites.&lt;/p&gt;

&lt;p&gt;The readme can use a &amp;lsquo;markdown&amp;rsquo; type language and there is tons of help for it like; &lt;a href=&#34;https://help.github.com/articles/github-flavored-markdown&#34;&gt;articles in GitHub&lt;/a&gt; or &lt;a href=&#34;http://daringfireball.net/projects/markdown/syntax#link&#34;&gt;blogs&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;5. Setup GitHub Pages&lt;/h3&gt;

&lt;p&gt;The readme file is a good start to give people a snapshot of the project, but we wanted to have something a bit more, so are using &lt;a href=&#34;http://pages.github.com&#34;&gt;GitHubPages&lt;/a&gt;.  It is initially a bit tricky to set up. We used the wizard that is on the GitHubPages site but it seemed to not do anything (it says to wait 10 mins).  After a while if you go to the url (username.github.io/repository) that the wizard gives you (in our case it was &lt;a href=&#34;http://peterwatts.github.io/allegria/&#34;&gt;http://peterwatts.github.io/allegria/&lt;/a&gt;) then you should see the default page.&lt;/p&gt;

&lt;p&gt;Underneath, the GitHubPages is a gh-pages branch under your repo and you can go into there and customise it to your heart&amp;rsquo;s content (we initially just tweaked the index page (by editing it online) with project information).  You could probably use some cool tools to manage it much as you would any normal html website but we are doing it all manually at the moment.&lt;/p&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;6. Setup wiki&lt;/h3&gt;

&lt;p&gt;Using the wiki for the majority of documentation for the project other than read-me&amp;rsquo;s and release notes etc which are included in each of the development directories.&lt;/p&gt;

&lt;p&gt;Generally the wiki makes it easy to put up some information relatively quickly.  Needed to play around with getting the markup correct (e.g. putting spaces after text on end of line to get to display on next line, using relative links and embedding images in the pages).&lt;/p&gt;

&lt;p&gt;Using predominantly the &amp;ldquo;Markdown&amp;rdquo; editing mode as it&amp;rsquo;s the default (&lt;a href=&#34;http://www.mediawiki.org/wiki/MediaWiki&#34;&gt;MediaWiki&lt;/a&gt; would also be useful) and just using basic functionality to begin with including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;simple naming standard of Home, Concept, HowTo, Paint-by-numbers, Point-of-view so the &amp;lsquo;Pages&amp;rsquo; page looks organised and relative links are easy to guess.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;formatting like; headings, bold, code blocks, unordered lists, ordered lists and quotes.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;relative links for content inside the Github repository (including for images).&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is plenty of raw documentation out there about the wiki syntax including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://help.github.com/categories/88/articles&#34;&gt;GitHub Help&lt;/a&gt; including; Writing on GitHub, Markdown Basics and GitHub Flavoured Markdown&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://guides.github.com/overviews/mastering-markdown/&#34;&gt;http://guides.github.com/overviews/mastering-markdown/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gollum/gollum/wiki&#34;&gt;https://github.com/gollum/gollum/wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mojombo/gollum-demo/wiki&#34;&gt;https://github.com/mojombo/gollum-demo/wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.github.com/articles/github-flavored-markdown&#34;&gt;https://help.github.com/articles/github-flavored-markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/blog/1395-relative-links-in-markup-files&#34;&gt;https://github.com/blog/1395-relative-links-in-markup-files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://help.github.com/articles/relative-links-in-readmes&#34;&gt;https://help.github.com/articles/relative-links-in-readmes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&#34;&gt;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://daringfireball.net/projects/markdown/&#34;&gt;http://daringfireball.net/projects/markdown/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://designshack.net/articles/html/mastering-markdown-30-resources-apps-and-tutorials-to-get-you-started/&#34;&gt;http://designshack.net/articles/html/mastering-markdown-30-resources-apps-and-tutorials-to-get-you-started/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also a few forum examples for some of the trickier formatting stuff such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://webapps.stackexchange.com/questions/29602/markdown-to-insert-and-display-an-image-on-github-repo&#34;&gt;embedding images into a wiki page&lt;/a&gt; - some of the standard information available looked confusing or inaccurate - but this explanation seems to work.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/snowplow/snowplow/wiki&#34;&gt;example Github wiki&lt;/a&gt; that has some nice table footer and sidebar functionality.&lt;/li&gt;
&lt;li&gt;plenty of forum examples out there on using the Eclipse IDE to author the wiki rather than typing into the online webclient but need to test out how to do this before write about it.&lt;/li&gt;
&lt;li&gt;can get some of the work in formatting tables done with a &lt;a href=&#34;http://www.tablesgenerator.com/markdown_tables&#34;&gt;table generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;ldquo;Github Flavoured Markdown (GFM) Markdown table syntax is quite simple. It does not allow row or cell spanning as well as putting multi-line text in a cell&amp;rdquo;.  To get a bit fancier can use some inline HTML.  The &lt;a href=&#34;http://www.w3schools.com/html/html_tables.asp&#34;&gt;W3Schools site&lt;/a&gt; has some good documentation for this (and syntax in general).&lt;/p&gt;

&lt;p&gt;Simple example using the info from W3Schools:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  &amp;lt;table border=&amp;quot;0&amp;quot;&amp;gt;
  &amp;lt;!--tr gives you a new table row and td gives you a new cell in the row--&amp;gt;
  &amp;lt;tr&amp;gt;
    &amp;lt;td&amp;gt;For more information on using groovy with cmis:
     &amp;lt;ul&amp;gt;
     &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://groovy.codehaus.org&amp;quot;&amp;gt;Groovy home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
     &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://groovy.codehaus.org/Documentation&amp;quot;&amp;gt;Groovy documentation&amp;lt;/a&amp;gt; including getting started and tutorials&amp;lt;/li&amp;gt;
     &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://www.ibm.com/developerworks/java/tutorials/j-groovy&amp;quot;&amp;gt;IBM groovy tutorial&amp;lt;/a&amp;gt; includes using with Eclipse IDE&amp;lt;/li&amp;gt;
     &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;http://www.gradle.org&amp;quot;&amp;gt;Gradle&amp;lt;/a&amp;gt; build system for groovy&amp;lt;/li&amp;gt;
     &amp;lt;li&amp;gt;books with groovy code examples&amp;lt;/li&amp;gt;
     &amp;lt;/ul&amp;gt;
    &amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;
      &amp;lt;!--The target=&amp;quot;_blank&amp;quot; tag opens in a new browser tab when click on image--&amp;gt;
      &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://www.manning.com/mueller&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;
        &amp;lt;img src=&amp;quot;./images/manning-cmis.png?raw=true&amp;quot; alt=&amp;quot;book&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
      &amp;lt;/p&amp;gt;
    &amp;lt;/td&amp;gt;
  &amp;lt;/tr&amp;gt;
  &amp;lt;/table&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;which produces:&lt;/p&gt;

&lt;table border=&#34;0&#34;&gt;
&lt;tr&gt;
  &lt;td&gt;For more information on using groovy with cmis:
   &lt;ul&gt;
   &lt;li&gt;&lt;a href=&#34;http://groovy.codehaus.org&#34;&gt;Groovy home&lt;/a&gt;&lt;/li&gt;
   &lt;li&gt;&lt;a href=&#34;http://groovy.codehaus.org/Documentation&#34;&gt;Groovy documentation&lt;/a&gt; including getting started and tutorials&lt;/li&gt;
   &lt;li&gt;&lt;a href=&#34;http://www.ibm.com/developerworks/java/tutorials/j-groovy&#34;&gt;IBM groovy tutorial&lt;/a&gt; includes using with Eclipse IDE&lt;/li&gt;
   &lt;li&gt;&lt;a href=&#34;http://www.gradle.org&#34;&gt;Gradle&lt;/a&gt; build system for groovy&lt;/li&gt;
   &lt;li&gt;books with groovy code examples&lt;/li&gt;
   &lt;/ul&gt;
  &lt;/td&gt;
  &lt;td&gt;
    &lt;p&gt;&lt;a href=&#34;http://www.manning.com/mueller&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;./images/manning-cmis.png?raw=true&#34; alt=&#34;book&#34;&gt;&lt;/a&gt;
    &lt;/p&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Examples of coding with images:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;a name=&amp;quot;PaintByNumbers&amp;quot;&amp;gt;&amp;lt;/a&amp;gt; 
##![Paint](/assets/img/paint-by-numbers-50.png?raw=true) Paint by Numbers  

&amp;lt;a name=&amp;quot;HowTo&amp;quot;&amp;gt;&amp;lt;/a&amp;gt; 
&amp;lt;html&amp;gt;
  &amp;lt;h2&amp;gt;
      &amp;lt;img src=&amp;quot;../blob/master/images/paint-by-numbers-50.png?raw=true&amp;quot; alt=&amp;quot;icon&amp;quot; style=&amp;quot;float:left&amp;quot;&amp;gt; How To&#39;s
  &amp;lt;/h2&amp;gt;
&amp;lt;/html&amp;gt; 

[![Gem Version](https://badge.fury.io/rb/gollum.png)](http://rubygems.org/gems/gollum)

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;toc_7&#34;&gt;7. Setup issues log&lt;/h3&gt;

&lt;p&gt;Not getting too funky here but will use the issues list capability to store:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;requirements definitions (green label)&lt;/li&gt;
&lt;li&gt;project issues / key decisions&lt;/li&gt;
&lt;li&gt;bugs, enhancements etc&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CMIS Workbench</title>
      <link>http://localhost:1313/retrospectives/paint-by-numbers/cmis-workbench/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/retrospectives/paint-by-numbers/cmis-workbench/</guid>
      <description>

&lt;p&gt;&lt;html&gt;
&lt;table border=&#34;0&#34;&gt;
&lt;tr&gt;
  &lt;td&gt;
    &lt;p&gt;
      &lt;img src=&#34;./images/paint-by-numbers.png?raw=true&#34; alt=&#34;book&#34;&gt;
    &lt;/p&gt;
  &lt;/td&gt;
  &lt;td&gt;
    &lt;p&gt;This paint by numbers has used:&lt;/p&gt;
    &lt;p&gt;&lt;b&gt;Alfresco 4.2&lt;/b&gt;&lt;/p&gt;
    &lt;p&gt;&lt;b&gt;CMIS Workbench 0.9.0-beta-1 &amp;amp; 0.10.0&lt;/b&gt;&lt;/p&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/html&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://chemistry.apache.org/java/developing/tools/dev-tools-workbench.html&#34;&gt;CMIS Workbench&lt;/a&gt; is a desktop (osx, win, linux) repository browser and development tool for working with the OpenCMIS client API (there&amp;rsquo;s an &lt;a href=&#34;http://chemistry.apache.org/java/developing/tools/dev-tools-workbench.html&#34;&gt;introductory video&lt;/a&gt; that provides a simple overview).&lt;/p&gt;

&lt;p&gt;Things it&amp;rsquo;s being used on Allegria for include:
* quickly prototyping and checking content types and properties
* working out syntax for cmis queries
* running quick scripts for changing objects in the repositories&lt;/p&gt;

&lt;p&gt;The OpenCMIS API it uses, is an open source implementation of the &lt;a href=&#34;http://docs.oasis-open.org/cmis/CMIS/v1.1/CMIS-v1.1.pdf&#34;&gt;Content Management Interoperability Services (CMIS) specification&lt;/a&gt; provided by the &lt;a href=&#34;http://chemistry.apache.org&#34; title=&#34;target=_blank&#34;&gt;Apache Chemistry project&lt;/a&gt;.  The CMIS Workbench is also one of the tools from the apache project:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/assets/img/chemistry_tm_logo_small.png?raw=true&#34; alt=&#34;logo&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;/assets/img/apache-chemistry.png?raw=true&#34; alt=&#34;img&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Alfresco being a cmis-compliant rich content repository, means that it provides a set of [[services for working with objects|Helicopter view: CMIS]] defined by the specification (which are then wrapped in the OpenCMIS implementation that a client like the CMIS Workbench can use).  With CMIS, most capabilities of the Alfresco repository are accessible and for the rest there are [[other interfaces|Helicopter view: Alfresco integration]] available.&lt;/p&gt;

&lt;p&gt;Florian Muller, Jay Brown and Jeff Potts have written &lt;a href=&#34;http://www.manning.com/mueller&#34;&gt;CMIS and Apache Chemistry in Action&lt;/a&gt;, which they describe as a hands on experience with the [cmis] standard and with the Apache Chemistry libraries and tools [including CMIS Workbench].  In a very similar vein to Allegria, the focus of the book is on:
&amp;gt;
getting a good general understanding of CMIS, enough to build a useful (and we hope fun) application&lt;br /&gt;
&amp;gt;&lt;/p&gt;

&lt;p&gt;This paint-by-numbers is not to redo the work inside their book but does summarise some of the key aspects of the CMIS Workbench, in particular using it with an Alfresco repository.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Steps&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Get CMIS Workbench&lt;/li&gt;
&lt;li&gt;Connecting the workbench to repositories&lt;/li&gt;
&lt;li&gt;Browsing objects in the repository&lt;/li&gt;
&lt;li&gt;Querying the repository&lt;/li&gt;
&lt;li&gt;CMIS Types&lt;/li&gt;
&lt;li&gt;The groovy console&lt;/li&gt;
&lt;li&gt;Advanced features&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;1. Get CMIS Workbench&lt;/h3&gt;

&lt;p&gt;The CMIS Workbench can be &lt;a href=&#34;http://www.apache.org/dyn/closer.cgi/chemistry/opencmis/0.10.0/chemistry-opencmis-workbench-0.10.0-full.zip&#34;&gt;downloaded&lt;/a&gt; as a zip from the &lt;a href=&#34;http://chemistry.apache.org&#34;&gt;Apache Chemistry project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Florian Muller has also created a &lt;a href=&#34;https://github.com/fmui/ApacheChemistryInAction&#34;&gt;GitHub Repository&lt;/a&gt; for readers of &lt;a href=&#34;http://www.manning.com/mueller&#34;&gt;CMIS and Apache Chemistry in Action&lt;/a&gt; which contains; a zip of the CMIS Workbench, an in-memory cmis compliant repository (another one of the apache project&amp;rsquo;s tools) and the source code for each chapter&amp;rsquo;s examples.  To use the ApacheChemistryInAction GitHub repository, fork it and import it to Eclipse eGit as per the paint-by-numbers directions for [[GitHub|Paint by numbers: GitHub]]&lt;img src=&#34;/assets/img/paint-by-numbers-10.png?raw=true&#34; alt=&#34;icon&#34; /&gt;
 and the ones for [[Eclipse|Paint by numbers: Eclipse]]&lt;img src=&#34;/assets/img/paint-by-numbers-10.png?raw=true&#34; alt=&#34;icon&#34; /&gt;
.&lt;/p&gt;

&lt;p&gt;Unzip the chemistry-opencmis-workbench-0.10.0-full.zip.  Using a linux or osx terminal type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd [directory where extracted workbench to]
./workbench.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; the workbench.sh file from Florian&amp;rsquo;s GitHub repo is tailored to use the apache in-memory repository.  To use the CMIS Workbench with Alfresco it is better to also get the one from the ApacheProject (so rename Florian&amp;rsquo;s to something like &lt;code&gt;workbench.in-memory.sh&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;To have a neater installation and run it from the osx launchpad or dock follow this [[paint-by-numbers|Paint by numbers: Launching osx scripts]]&lt;img src=&#34;/assets/img/paint-by-numbers-10.png?raw=true&#34; alt=&#34;icon&#34; /&gt;
.&lt;/p&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;2. Connecting the workbench&lt;/h3&gt;

&lt;p&gt;The connection window will appear either when starting the application or using the &amp;lsquo;Connection&amp;rsquo; menu button:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;./images/cmis workbench on-premise connection.png?raw=true&#34; alt=&#34;connection&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;The three key items needed to make a connection to a repository host are:
* &lt;strong&gt;BINDING&lt;/strong&gt; - the bindings (atompub, webservice, browser) are explained in detail in the cmis specification (the &amp;lsquo;browser&amp;rsquo; binding is the fullest and most lightweight implementation but not always available).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;URL&lt;/strong&gt; - the url is where the rubber hits the road for cmis on Alfresco, however it is a little tricky to understand just which url is needed as there are many to choose from depending on; what version of Alfresco is running, how the repository is deployed (i.e. on-premise, cloud, public), which binding is being used (atompub, webservice, browser) and whether connecting to the OpenCMIS API or to services or service information.  To keep this step readable the unravelling of this is in [[Spaghetti western: CMIS URL|Spaghetti western: CMIS URL]]&lt;img src=&#34;/assets/img/spaghetti-western-10.png?raw=true&#34; alt=&#34;icon&#34; /&gt;
 (although the examples below have the answers anyway).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;AUTHENTICATION CREDENTIALS / METHOD&lt;/strong&gt; - just like the url, we are spoilt for choice on what authentication methods and credentials may be used, and there is a proliferation of documentation to go along with that.  To keep things simple going to use the standard, non-https, user name and password for connecting to Alfresco on-premise and when connecting to Alfresco in the cloud, use the required oAuth implementation (how to do this is in the examples below).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &amp;lsquo;basic&amp;rsquo; tab provides, well, basic input boxes for these key parameters plus some performance tuning parameters (which &lt;a href=&#34;http://www.manning.com/mueller&#34;&gt;CMIS and Apache Chemistry in Action&lt;/a&gt; explains in Part 3 - advanced topics).  The &amp;lsquo;expert&amp;rsquo; tab allows an expanded syntax of &lt;a href=&#34;http://chemistry.apache.org/java/0.9.0/maven/apidocs/org/apache/chemistry/opencmis/commons/SessionParameter.html&#34;&gt;OpenCMIS session parameters&lt;/a&gt; to fine tune the &lt;a href=&#34;http://chemistry.apache.org/java/0.9.0/maven/apidocs/constant-values.html#org.apache&#34;&gt;values&lt;/a&gt; that can be used.  The expert tab has a drop down of some preset connection parameters (such as Alfresco) to make things easier.&lt;/p&gt;

&lt;p&gt;So, to connect to an Alfresco 4.2e, on-premise repository with the OpenCMIS browser binding use the following parameters:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;org.apache.chemistry.opencmis.binding.spi.type=browser
org.apache.chemistry.opencmis.binding.browser.url=http://[host]/alfresco/cmisbrowser
org.apache.chemistry.opencmis.user=&amp;lt;user&amp;gt;
org.apache.chemistry.opencmis.password=&amp;lt;password&amp;gt;
org.apache.chemistry.opencmis.binding.compression=true
org.apache.chemistry.opencmis.binding.cookies=true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Given only simple parameters were chosen in the on-premise example above, they could have also been entered in the basic tab for the same result.  Connecting to the Alfresco in the cloud repository requires the use of the expert tab though as it uses parameter values that cannot be set on the basic tab.&lt;/p&gt;

&lt;p&gt;The example syntax below was generated by selecting &amp;lsquo;Alfresco Cloud AtomPub&amp;rsquo; from the parameter template drop down list at the top of the expert tab (at present it doesn&amp;rsquo;t seem like the browser binding is available in the cloud repository). The value for the oAuth access token is obtained from an oAuth authentication flow which is described in [[Paint by numbers: Alfresco oAuth sample application|Paint by numbers: Alfresco oAuth sample application]]&lt;img src=&#34;./images/paint-by-numbers-10.png?raw=true&#34; alt=&#34;icon&#34; /&gt;
:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Alfresco Cloud (CMIS 1.0 AtomPub)
org.apache.chemistry.opencmis.binding.spi.type=atompub
org.apache.chemistry.opencmis.binding.atompub.url=https://api.alfresco.com/cmis/versions/1.0/atom
org.apache.chemistry.opencmis.binding.auth.http.basic=false

# Please provide a valid OAuth access token in the following property
# Note that Alfresco Cloud access tokens have a limited lifetime (currently 1 hour) and the OpenCMIS Workbench does not auto-refresh the access token when it expires
org.apache.chemistry.opencmis.binding.header.0=Authorization:Bearer ####ACCESS_TOKEN####

# Other optional options - compression etc. - may be provided here
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once all the relevant parameters are entered, pressing the &amp;lsquo;load repositories&amp;rsquo; button, presents a choice of instances on the host (as can run multiples), choose a repository from the drop down, press the login button and &lt;a href=&#34;http://www.imdb.com/title/tt2379418/&#34;&gt;voila!&lt;/a&gt; you are into the default configuration of the CMIS Workbench user interface.&lt;/p&gt;

&lt;p&gt;The CMIS Workbench can also be configured through &lt;a href=&#34;http://chemistry.apache.org/java/developing/tools/dev-tools-workbench.html&#34;&gt;system properties or additional properties&lt;/a&gt; in the expert login dialog. An &lt;a href=&#34;http://forums.alfresco.com/comment/75223#comment-75223&#34;&gt;Alfresco forum post&lt;/a&gt; explains this as:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The CMIS Workbench, for example, makes use of the OperationContext. It sets up two OperationContext objects when it starts:&lt;br /&gt;
* One OperationContext object is used for the folder list on left. This OperationContext only selects the data that is needed for this view: a handful of properties, no Allowable Actions, no ACLs, etc. That [as with paging] speeds up the retrieval of the list.&lt;br /&gt;
* The second OperationContext is used to populate the right hand panels. It selects everything because it displays everything.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The current values for the OperationContexts can be seen if press the Info button.  The notion of OperationContext is explained more fully in &lt;a href=&#34;http://www.manning.com/mueller&#34;&gt;CMIS and Apache Chemistry in Action&lt;/a&gt; and the &lt;a href=&#34;http://chemistry.apache.org/java/developing/guide.html&#34;&gt;Apache OpenCMIS API docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once connected the features of the tool are available.&lt;/p&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;3. Browsing objects in the repository&lt;/h3&gt;

&lt;p&gt;Browse the repository&amp;rsquo;s objects, actions, properties, relationships, ACL, policies, versions, types and extensions:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/assets/img/cmis-workbench-main.png?raw=true&#34; alt=&#34;browse&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;4. Querying the repository&lt;/h3&gt;

&lt;p&gt;The CMIS query syntax is defined in detail in:&lt;br /&gt;
* 2.1.14 Query of &lt;a href=&#34;http://docs.oasis-open.org/cmis/CMIS/v1.1/CMIS-v1.1.pdf&#34;&gt;Content Management Interoperability Services (CMIS) specification&lt;/a&gt;
* &lt;a href=&#34;http://wiki.alfresco.com/wiki/CMIS_Query_Language&#34;&gt;Alfresco wiki&lt;/a&gt;
* Chapter 5 - Query of &lt;a href=&#34;http://www.manning.com/mueller&#34;&gt;CMIS and Apache Chemistry in Action&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/assets/img/cmis-workbench-query.png?raw=true&#34; alt=&#34;query&#34; /&gt;
&lt;/p&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;5. CMIS Types&lt;/h3&gt;

&lt;p&gt;The type function exposes the content model through the workbench:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/assets/img/cmis-workbench-type.png?raw=true&#34; alt=&#34;type&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;The ability to create and update types allows programatic deployment of a content model eliminating the need for custom configuration scripts for the various repositories to configure types.&lt;/p&gt;

&lt;p&gt;Chapter 4 - CMIS metadata: types and properties of &lt;a href=&#34;http://www.manning.com/mueller&#34;&gt;CMIS and Apache Chemistry in Action&lt;/a&gt; describes how:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;OpenCMIS provides the TypeUtils class, which can read and write type definitions from and to XML and JSON.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;6. The groovy console&lt;/h3&gt;

&lt;p&gt;The groovy console provides a quick and easy development environment to use the &lt;a href=&#34;http://chemistry.apache.org/java/0.9.0/maven/apidocs/overview-summary.html&#34;&gt;Apache Chemistry OpenCMIS API&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/assets/img/cmis-workbench-groovy.png?raw=true&#34; alt=&#34;groovy&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;In addition to the default API, &lt;a href=&#34;http://www.manning.com/mueller&#34;&gt;CMIS and Apache Chemistry in Action&lt;/a&gt; highlights two other API&amp;rsquo;s that can be accessed from the Groovy console:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Chapter 3: Part 3 Advanced Topics - low-level api&lt;/em&gt;
&amp;gt;
The APIs provide an object-oriented interface with a lot of convenience, simplified data structures, and high-level operations that don’t exist in CMIS. On the other hand, these APIs hide extension points and access to the data structures that are transferred over the wire.&lt;br /&gt;
It turns out that there’s a layer between the bindings and these APIs called the low- level API. The low-level API provides a set of interfaces and operations that model all the services and operations in the CMIS specification one-to-one. For each of the nine CMIS services, there’s an interface. For each operation, there’s a method with exactly the same name and the same parameters, in the same order. The data objects are very close to the data structures used on the wire. The semantics and behavior are as described in the CMIS domain model. You can use the CMIS specification as a manual for these interfaces.
&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Chapter 3: Creating, updating, and deleting objects with CMIS - groovy helper scripts&lt;/em&gt;
&amp;gt;
CMIS helper scripts distributed with the CMIS Workbench can make your Groovy code more succinct. What other shortcuts are available? If you take a look at the source code for the CMIS Workbench, you’ll find the Groovy file that defines the CMIS helper scripts in /src/main/resources/scripts/CMIS.groovy. Consult that file for the full list.
&amp;gt;&lt;/p&gt;

&lt;p&gt;The Florian Muller GitHub Repository workbench version ships with chapter scripts which can be accessed when use the Console button.  The apache project&amp;rsquo;s version ships with other scripts that can be accessed from the Console button of that version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; if get the unauthorised error when accessing the cloud repository then the token has probably timed out - need to close the groovy console, regenerate an access token, reconnect with the new token and reopen the console.&lt;/p&gt;

&lt;p&gt;For information on groovy:
* &lt;a href=&#34;http://groovy.codehaus.org&#34;&gt;Groovy home&lt;/a&gt;
* &lt;a href=&#34;http://groovy.codehaus.org/Documentation&#34;&gt;documentation&lt;/a&gt; including getting started and tutorials
* &lt;a href=&#34;http://www.gradle.org&#34;&gt;Gradle&lt;/a&gt; build system for groovy&lt;/p&gt;

&lt;p&gt;Some books on Groovy and CMIS (with source code):&lt;/p&gt;

&lt;p&gt;&lt;html&gt;
&lt;table border=&#34;0&#34;&gt;
&lt;tr&gt;
  &lt;td&gt;
    &lt;p&gt;&lt;a href=&#34;http://www.manning.com/mueller&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;./images/manning-cmis.png?raw=true&#34; alt=&#34;book&#34;&gt;&lt;/a&gt;
    &lt;/p&gt;
  &lt;/td&gt;
  &lt;td&gt;
    &lt;p&gt;&lt;a href=&#34;http://www.manning.com/koenig2&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;./images/manning-groovy.png?raw=true&#34; alt=&#34;book&#34;&gt;&lt;/a&gt;
    &lt;/p&gt;
  &lt;/td&gt;
  &lt;td&gt;
    &lt;p&gt;&lt;a href=&#34;http://www.packtpub.com/develop-applications-and-integrations-that-can-interact-with-cmis-alfresco/book&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;./images/pakt-cmis.png?raw=true&#34; alt=&#34;book&#34;&gt;&lt;/a&gt;
    &lt;/p&gt;
  &lt;/td&gt;
  &lt;td&gt;
    &lt;p&gt;&lt;a href=&#34;http://www.packtpub.com/groovy-2-cookbook/book&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;./images/pakt-groovy.png?raw=true&#34; alt=&#34;book&#34;&gt;&lt;/a&gt;
    &lt;/p&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/html&gt;&lt;/p&gt;

&lt;h3 id=&#34;toc_7&#34;&gt;7. Advanced features&lt;/h3&gt;

&lt;p&gt;Other features of CMIS Workbench are:&lt;br /&gt;
* Repository info
* &lt;a href=&#34;http://wiki.alfresco.com/wiki/CMIS#Change_Log&#34;&gt;Change Logger&lt;/a&gt;
* TCK (Test Compatibility Kit)
* CMIS Client Logging (filtered logging)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Concept Overview</title>
      <link>http://localhost:1313/concepts/overview/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/concepts/overview/</guid>
      <description>&lt;p&gt;&lt;em&gt;this page is not finished, see the [[wiki home page|Home]] to find out why&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;multiple ways to get to content so can use the tools familiar with to manipulate content e.g. iPhoto or flickr for photos - content at the edge is always tricky - ingesting / manipulating
protocol-based access so don’t get locked in&lt;/p&gt;

&lt;p&gt;service bus
design based on a concise set of simple concepts that all can understand and build upon
exposes a key interface where people can do content-driven-development&lt;/p&gt;

&lt;p&gt;content context is built in - because meta-data is a blob as well then can rebuild from scratch an  understanding of content objects just by parsing the blobs - e.g. db backup corrupt, backup manifest corrupt, changing to a new db goes wrong -  never left with just thousands of cut up file names with no way to put back together
ability to back up in a powerful way is built in - has deduplication, sync and share built-in, can use varied cost backup repositories depending on rules e.g. sentimental photos can be backed up on multiple local, peer and cloud sites, large media files that may not be so important can be on local and peer disks - doesn’t have to be one size / cost fits all - its built-in so no separate tools / consoles to manage and because its mutable storage don’t have to worry about piecing incremental backups together - just like git but for content
specific implementation through Docker containers on NAS type devices.  Cloud storage through something like S3 buckets to Glacier lifecycle.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/assets/img/allegria-logical-model.png?raw=true&#34; alt=&#34;oauth-flow&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Launchng OSX scripts</title>
      <link>http://localhost:1313/retrospectives/paint-by-numbers/launching-osx-scripts/</link>
      <pubDate>Sat, 01 Feb 2014 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/retrospectives/paint-by-numbers/launching-osx-scripts/</guid>
      <description>

&lt;p&gt;&lt;html&gt;
&lt;table border=&#34;0&#34;&gt;
&lt;tr&gt;
  &lt;td&gt;
    &lt;p&gt;
      &lt;img src=&#34;./images/paint-by-numbers.png?raw=true&#34; alt=&#34;book&#34;&gt;
    &lt;/p&gt;
  &lt;/td&gt;
  &lt;td&gt;
    &lt;p&gt;This paint by numbers has used:&lt;/p&gt;
    &lt;p&gt;&lt;b&gt;Alfresco 4.2&lt;/b&gt;&lt;/p&gt;
    &lt;p&gt;&lt;b&gt;CMIS Workbench 0.9.0-beta-1 &amp;amp; 0.10.0&lt;/b&gt;&lt;/p&gt;
  &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/html&gt;&lt;/p&gt;

&lt;p&gt;The CMIS Workbench application in its default download launches with a shell script rather than a neat osx package.  The osx Automator can be used to launch it from an icon in the osx launchpad or dock.&lt;/p&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Steps&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Create an &amp;lsquo;application&amp;rsquo; from the osx Automator:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/assets/img/mac-osx-automator-type.png?raw=true&#34; alt=&#34;automator&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Drag run shell script to the action window and enter the path to workbench.sh:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/assets/img/mac-osx-automator.png?raw=true&#34; alt=&#34;action&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Save the package as &amp;lsquo;CMIS Workbench.app&amp;rsquo; to the &amp;lsquo;Applications&amp;rsquo; folder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Go to the &amp;lsquo;Applications&amp;rsquo; folder, right-click on the &amp;lsquo;CMIS Workbench.app&amp;rsquo; file,&amp;lsquo;Get Info&amp;rsquo;and and click on the icon at the top left until it has a blue outline:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/assets/img/mac-osx-getinfo.png?raw=true&#34; alt=&#34;finder&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; &lt;a href=&#34;https://svn.apache.org/repos/asf/chemistry/opencmis/trunk/chemistry-opencmis-workbench/chemistry-opencmis-workbench/src/main/resources/images/&#34;&gt;Download&lt;/a&gt; the CMIS Workbench icon (or use the pic below), open it in a paint application, copy to the clipboard and use the Finder [Edit] menu to paste the CMIS Workbench icon onto the &amp;lsquo;Get Info&amp;rsquo; icon.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/assets/img/cmis-wb-icon.png?raw=true&#34; alt=&#34;icon&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>